# The master WEST configuration file for a simulation.
# vi: set filetype=yaml :
---
mdlearn:
  cvae:
    input_shape: !!python/tuple [ !!int 1, !!int 40, !!int 40]
    filters: [!!int 16, !!int 16, !!int 16, !!int 16]
    kernels: [!!int 3, !!int 3, !!int 3, !!int 3]
    strides: [!!int 1, !!int 1, !!int 1, !!int 2]
    affine_widths: [ !!int 128]
    affine_dropouts: [ !!float 0.5]
    latent_dim: !!int 3
    lambda_rec: !!float 1.0
    num_data_workers: !!int 0
    #prefetch_factor: None
    batch_size: !!int 64
    device: "cpu"
    optimizer_name: "RMSprop"
    optimizer_hparams: {"lr": !!float 0.001, "weight_decay": !!float 0.00001}
    epochs: !!int 100
    checkpoint_log_every: !!int 25
    plot_log_every: 25
    plot_n_samples: 5000
    plot_method: "raw"
west:
  ddmd:
    # Output directory for the run.
    output_path: ddwe-logs
    # How often to update the model. Set to 0 for static.
    update_interval: 10
    # Number of lagging iterations to use for training data.
    lag_iterations: 50
    # Number of neigbors to use for local outlier factor.
    lof_n_neighbors: 20
    # Number of iterations to look back at for local outlier factor.
    lof_iteration_history: 50
    # Number of westpa splits to prioritize outliers with.
    # num_we_merges gets implicitly set to num_we_splits + 1.
    num_we_splits: 4
    # The top number of outlier segments that will be further
    # filtered by some biophysical observable. Must satisify
    # num_trial_splits >= num_we_splits + 1 
    num_trial_splits: 11
    # Lower limit on walker weight. If all of the walkers in 
    # num_trial_splits are below the limit, split/merge is skipped
    # that iteration
    split_weight_limit: 1e-12
    # Upper limit on walker weight. If all of the walkers in 
    # num_trial_splits exceed limit, split/merge is skipped
    # that iteration
    merge_weight_limit: 0.1
    # Path to Checkpoint model
    checkpoint_model: $WEST_SIM_ROOT/common_files/checkpoint-epoch-100.pt
    map_location: 'cpu'
  drivers:
    module_path: $WEST_SIM_ROOT
    we_driver: alex_ddmd_driver.LS_Cluster_Driver
    subgroup_function: group.ls_kmeans
    subgroup_arguments:
      n_clusters:    5
      dmatrix_map:   ntl9_folding_synd/dmatrix_map.pkl
      synd_model:    ntl9_folding_synd/ntl9_folding.synd
  system:
    driver: westpa.core.systems.WESTSystem
    system_options:
      # Dimensionality of your progress coordinate
      pcoord_ndim: 1
      # Number of data points per iteration
      pcoord_len: 2
      # Data type for your progress coordinate
      pcoord_dtype: !!python/name:numpy.float32
      bins:
        type: RectilinearBinMapper
        # The edges of the bins
        boundaries:
          #- [0.0, 1., 1.1,  1.2, 1.3, 1.4, 1.5,1.6, 1.7, 1.8, 1.9,
          #   2.0, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9, 
          #   3.0, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9,
          #   4.0, 4.1, 4.2, 4.3, 4.4, 4.5, 
          #   4.6, 4.8, 5.0, 5.2, 5.4, 5.6, 5.8, 6.0, 6.2, 6.4,
          #   6.6, 7.2, 7.8, 8.4, 9.0, 9.6, 10.2, 'inf']
          - [0, 1, 5, 10, 'inf']
          #- [0,10,'inf']
      # Number walkers per bin
      bin_target_counts: 22
  propagation:
    max_total_iterations: 2000
    max_run_wallclock:    48:00:00
    propagator:           synd.westpa.propagator.SynMDPropagator
    parameters:
      synd_model:         ntl9_folding_synd/ntl9_folding.synd
      topology:           ntl9_folding_synd/ntl9.pdb
    gen_istates:          false
  data:
    west_data_file: west.h5
    datasets:
      - name:        pcoord
        scaleoffset: 4
      - name:        dmatrix
        scaleoffset: 4
    #  - name:        rmsd
    #    scaleoffset: 4
    #  - name:        radgyr
    #    scaleoffset: 4
    #  - name:        angle
    #    scaleoffset: 4
    #  - name:        rcoord
    #    scaleoffset: 4
    #data_refs:
    #  iteration:     $WEST_SIM_ROOT/traj_segs/iter_{n_iter:06d}.h5
    #  segment:       $WEST_SIM_ROOT/traj_segs/{segment.n_iter:06d}/{segment.seg_id:06d}
    #  basis_state:   $WEST_SIM_ROOT/bstates/{basis_state.auxref}
    #  initial_state: $WEST_SIM_ROOT/istates/{initial_state.iter_created}/{initial_state.state_id}.rst
  plugins:
    #- plugin:        synd.westpa.SynDAugmentationDriver
    #  coord_map:     ntl9_folding_synd/coord_map.pkl
    - plugin:        augmentation_driver.SynDAugmentationDriver
      module_path:   $WEST_SIM_ROOT
      coord_map:     ntl9_folding_synd/coord_map.pkl
      dmatrix_map:   ntl9_folding_synd/dmatrix_map.pkl


  # executable:
  #   environ:
  #     PROPAGATION_DEBUG: 1
  #   datasets:
  #     - name:    rmsd
  #       enabled: true
  #     - name:    radgyr
  #       enabled: true
  #     - name:    angle
  #       enabled: true
  #     - name:    rcoord
  #       enabled: true
  #   propagator:
  #     executable: $WEST_SIM_ROOT/westpa_scripts/runseg.sh
  #     stdout:     $WEST_SIM_ROOT/seg_logs/{segment.n_iter:06d}-{segment.seg_id:06d}.log
  #     stderr:     stdout
  #     stdin:      null
  #     cwd:        null
  #     environ:
  #       SEG_DEBUG: 1
  #   get_pcoord:
  #     executable: $WEST_SIM_ROOT/westpa_scripts/get_pcoord.sh
  #     stdout:     /dev/null
  #     stderr:     stdout
  #   gen_istate:
  #     executable: $WEST_SIM_ROOT/westpa_scripts/gen_istate.sh
  #     stdout:     /dev/null
  #     stderr:     stdout
  #   post_iteration:
  #     enabled:    true
  #     executable: $WEST_SIM_ROOT/westpa_scripts/post_iter.sh
  #     stderr:     stdout
  #   pre_iteration:
  #     enabled:    false
  #     executable: $WEST_SIM_ROOT/westpa_scripts/pre_iter.sh
  #     stderr:     stdout
  # Settings for w_ipa, an interactive analysis program that can also automate analysis.
  analysis:
    directory: ANALYSIS                # specify the directory all analysis files should exist in.
    kinetics:                          # general options for both kinetics routines.
      step_iter: 1
      evolution: cumulative
      extra: [ 'disable-correl' ]
    analysis_schemes:                  # Analysis schemes.  Required: name (TEST), states, and bins
      TEST:
        enabled: True
        bins:
          - type: RectilinearBinMapper
            boundaries:
              - [0, 15, 25, 90, 165, 180, 190, 250, 305, 315, 330, 361] 
              - [0, 10, 30, 40, 90, 100, 110, 125, 180, 205, 230, 305, 361]
        states:
          - label: C7_eq
            coords:
              - [195, 60]
              - [195, 95]
              - [255, 60]
              - [255, 95]
          - label: C7_ax
            coords:
              - [30,310]
      TEST-OLD:
        enabled: False
        bins:
          - type: RectilinearBinMapper
            boundaries:
              - [0, 10, 125, 205, 270, 361, 420]
              - [0, 125, 180, 220, 280, 361, 420]
        states:
          - label: c7_eq
            coords:
              - [60, 240]
          - label: c7_ax
            coords:
              - [240, 155]

#      JER:
#        enabled: True
#        bins:
#          - type: RectilinearBinMapper
#            boundaries:
#              - [0, 25, 90, 165, 315, 361]
#              - [0, 30, 305, 361]
#        states:
#          - label: alpha_r
#            coords:
#              - [170,5]
#              - [170,310]
#          - label: c7_ax
#            coords:
#              - [30,310]
